# Generated by Django 5.0.2 on 2025-09-17 09:19

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChunkingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('method_type', models.CharField(choices=[('unstructured', 'Unstructured.io'), ('llamaparse', 'LlamaParse'), ('hierarchical', 'Hierarchical Chunking'), ('semantic', 'Semantic Chunking'), ('recursive', 'Recursive Character Splitting'), ('sentence', 'Sentence-based Splitting'), ('token', 'Token-based Splitting'), ('financial', 'Financial Document Splitting'), ('hybrid', 'Hybrid Chunking')], max_length=20)),
                ('description', models.TextField()),
                ('parameters', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Chunking Method',
                'verbose_name_plural': 'Chunking Methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'txt', 'md'])])),
                ('file_type', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word Document'), ('txt', 'Text File'), ('md', 'Markdown')], max_length=10)),
                ('file_size', models.BigIntegerField()),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='ChunkingResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_chunks', models.IntegerField()),
                ('processing_time', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chunking_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunking_results', to='document_processing.chunkingmethod')),
            ],
            options={
                'verbose_name': 'Chunking Result',
                'verbose_name_plural': 'Chunking Results',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Chunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('chunk_type', models.CharField(choices=[('text', 'Text'), ('table', 'Table'), ('header', 'Header'), ('list', 'List'), ('paragraph', 'Paragraph'), ('mixed', 'Mixed Content')], default='text', max_length=20)),
                ('chunk_index', models.IntegerField()),
                ('start_position', models.IntegerField()),
                ('end_position', models.IntegerField()),
                ('token_count', models.IntegerField()),
                ('metadata', models.JSONField(default=dict)),
                ('parent_chunk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_chunks', to='document_processing.chunk')),
                ('chunking_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='document_processing.chunkingresult')),
            ],
            options={
                'verbose_name': 'Chunk',
                'verbose_name_plural': 'Chunks',
                'ordering': ['chunking_result', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('chunk_size_distribution', 'Chunk Size Distribution'), ('overlap_analysis', 'Overlap Analysis'), ('context_preservation', 'Context Preservation Score'), ('structure_retention', 'Structure Retention Rate'), ('semantic_coherence', 'Semantic Coherence Score'), ('processing_efficiency', 'Processing Efficiency'), ('table_detection', 'Table Detection Rate'), ('hierarchical_preservation', 'Hierarchical Preservation')], max_length=30)),
                ('metric_value', models.FloatField()),
                ('metric_details', models.JSONField(default=dict)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('chunking_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_metrics', to='document_processing.chunkingresult')),
            ],
            options={
                'verbose_name': 'Evaluation Metric',
                'verbose_name_plural': 'Evaluation Metrics',
                'ordering': ['-calculated_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('progress', models.IntegerField(default=0)),
                ('configuration', models.JSONField(default=dict)),
                ('chunking_methods', models.ManyToManyField(related_name='processing_jobs', to='document_processing.chunkingmethod')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_jobs', to='document_processing.document')),
            ],
            options={
                'verbose_name': 'Processing Job',
                'verbose_name_plural': 'Processing Jobs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ComparisonResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comparison_metrics', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('compared_methods', models.ManyToManyField(related_name='comparison_results', to='document_processing.chunkingmethod')),
                ('winner_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winning_comparisons', to='document_processing.chunkingmethod')),
                ('processing_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparison_results', to='document_processing.processingjob')),
            ],
            options={
                'verbose_name': 'Comparison Result',
                'verbose_name_plural': 'Comparison Results',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='chunkingresult',
            name='processing_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunking_results', to='document_processing.processingjob'),
        ),
    ]
